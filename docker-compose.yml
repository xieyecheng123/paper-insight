version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - paper_insight_net

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - paper_insight_net

  backend:
    image: paper-insight-backend
    build: ./backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - redis
      - postgres
    networks:
      - paper_insight_net

  celery_worker:
    image: paper-insight-celery_worker
    build: ./backend
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - redis
      - postgres
    command: celery -A celery_worker.celery_app worker --loglevel=info
    networks:
      - paper_insight_net

  frontend:
    build:
      context: ./frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev
    networks:
      - paper_insight_net

volumes:
  postgres_data:
  uploads_data:

networks:
  paper_insight_net:
    driver: bridge 